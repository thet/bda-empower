/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/preflight";
 */
@tailwind preflight;

/**
 * This injects any component classes registered by plugins.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/components";
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

.em-btn-case       { @apply em-bg-case em-fg-lighter; }
.em-btn-analysis   { @apply em-bg-analysis em-fg-lighter; }
.em-btn-strategy   { @apply em-bg-strategy em-fg-lighter; }
.em-btn-action     { @apply em-bg-action em-fg-lighter; }
.em-btn-evaluation { @apply em-bg-evaluation em-fg-lighter; }

.em-txt-light { @apply em-fg-lighter; }
.em-txt-dark  { @apply em-fg-darker; }

.em-contribution {
    border: 4px solid;
    @apply em-bd-light;
}
.em-contribution-case       { @apply em-bd-case; }
.em-contribution-analysis   { @apply em-bd-analysis; }
.em-contribution-strategy   { @apply em-bd-strategy; }
.em-contribution-action     { @apply em-bd-action; }
.em-contribution-evaluation { @apply em-bd-evaluation; }

.em-contribution-header {
    @apply em-fg-lighter;
}
.em-contribution-footer {
    border-top: 1px solid;
    @apply em-bd-light;
}
.em-contribution-case .em-contribution-header { @apply em-bg-case; }
.em-contribution-case .em-contribution-footer { @apply em-bd-case; }
.em-contribution-analysis .em-contribution-header { @apply em-bg-analysis; }
.em-contribution-analysis .em-contribution-footer { @apply em-bd-analysis; }
.em-contribution-strategy .em-contribution-header { @apply em-bg-strategy; }
.em-contribution-strategy .em-contribution-footer { @apply em-bd-strategy; }
.em-contribution-action .em-contribution-header { @apply em-bg-action; }
.em-contribution-action .em-contribution-footer { @apply em-bd-action; }
.em-contribution-evaluation .em-contribution-header { @apply em-bg-evaluation; }
.em-contribution-evaluation .em-contribution-footer { @apply em-bd-evaluation; }

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */

/* empower-net base colors */

.em-fg-darker  { color: config('colors.em-darker'); }
.em-fg-dark    { color: config('colors.em-dark'); }
.em-fg-base    { color: config('colors.em-base'); }
.em-fg-light   { color: config('colors.em-light'); }
.em-fg-lighter { color: config('colors.em-lighter'); }

.em-bg-darker  { background-color: config('colors.em-darker'); }
.em-bg-dark    { background-color: config('colors.em-dark'); }
.em-bg-base    { background-color: config('colors.em-base'); }
.em-bg-light   { background-color: config('colors.em-light'); }
.em-bg-lighter { background-color: config('colors.em-lighter'); }

.em-bd-darker  { border-color: config('colors.em-darker'); }
.em-bd-dark    { border-color: config('colors.em-dark'); }
.em-bd-base    { border-color: config('colors.em-base'); }
.em-bd-light   { border-color: config('colors.em-light'); }
.em-bd-lighter { border-color: config('colors.em-lighter'); }

/* empower-net functional colors */

.em-fg-case         { color: config('colors.em-case'); }
.em-fg-analysis     { color: config('colors.em-analysis'); }
.em-fg-strategy     { color: config('colors.em-strategy'); }
.em-fg-action       { color: config('colors.em-action'); }
.em-fg-evaluation   { color: config('colors.em-evaluation'); }
.em-fg-notification { color: config('colors.em-notification'); }

.em-bg-case         { background-color: config('colors.em-case'); }
.em-bg-analysis     { background-color: config('colors.em-analysis'); }
.em-bg-strategy     { background-color: config('colors.em-strategy'); }
.em-bg-action       { background-color: config('colors.em-action'); }
.em-bg-evaluation   { background-color: config('colors.em-evaluation'); }
.em-bg-notification { background-color: config('colors.em-notification'); }

.em-bd-case         { border-color: config('colors.em-case'); }
.em-bd-analysis     { border-color: config('colors.em-analysis'); }
.em-bd-strategy     { border-color: config('colors.em-strategy'); }
.em-bd-action       { border-color: config('colors.em-action'); }
.em-bd-evaluation   { border-color: config('colors.em-evaluation'); }
.em-bd-notification { border-color: config('colors.em-notification'); }

/* end of transmission */
